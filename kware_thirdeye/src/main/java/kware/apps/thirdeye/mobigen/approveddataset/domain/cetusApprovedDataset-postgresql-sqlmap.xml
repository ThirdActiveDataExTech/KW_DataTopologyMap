<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cetusApprovedDataset">

    <select id="getDatasetPage" parameterType="ApprovedDatasetSearch" resultType="ApprovedDatasetList">
        /* cetusApprovedDataset.getDatasetPage */
        SELECT CAD.UID AS APPROVED_UID
              ,CAD.DATASET_ID
              ,TO_CHAR(CAD.APPROVED_DT, 'YYYY-MM-DD HH:MM') AS APPROVED_DT
              ,CU_APP.USER_NM AS APPROVER_NM
              ,( SELECT COALESCE(ROUND(SUM(CDM.RATINGS) / COUNT(*)), 0)
                   FROM CETUS_DATASET_COMMENT CDM
                  WHERE CDM.APPROVED_DATASET_UID = CAD.UID ) AS RATINGS
              ,CASE WHEN EXISTS (
                        SELECT 1
                          FROM CETUS_DATASET_BOOKMARK B
                         WHERE B.APPROVED_DATASET_UID = CAD.UID
              ) THEN 'Y' ELSE 'N' END AS BOOKMARK_YN
              ,CDUI.CATEGORY_UID AS CATEGORY_UID
              ,CDC.CATEGORY_NM AS CATEGORY_NM
              ,CDMU.UID AS MAIN_UI_UID
              ,CDMU.CODE AS MAIN_UI_CODE
              ,CDMU.TYPE_CD AS MAIN_UI_TYPE_CD
              ,CDUI.SHOW_AT AS SHOW_AT
              ,CDUI.EXTRA_JSON AS EXTRA_JSON
              ,CASE WHEN CU_REGISTRANT.USER_ID IS NULL THEN 'FALSE' ELSE 'TRUE' END AS IS_REGISTERED
              ,CU_REGISTRANT.USER_ID AS REGISTRANT_ID
          FROM CETUS_APPROVED_DATASET CAD
          LEFT JOIN CETUS_DATASET_UI CDU ON CDU.APPROVED_DATASET_UID = CAD.UID
          LEFT JOIN CETUS_USER CU_APP ON CU_APP.UID = CAD.APPROVER_UID
          LEFT JOIN CETUS_DATASET_UI CDUI ON CDUI.APPROVED_DATASET_UID = CAD.UID
          LEFT JOIN CETUS_DATASET_MAIN_UI CDMU ON CDMU.UID = CDUI.MAIN_UI_UID
          LEFT JOIN CETUS_DATASET_CATEGORY CDC ON CDC.UID = CDUI.CATEGORY_UID
          LEFT JOIN CETUS_MOBIGEN_REGISTRANT CMR ON CMR.DATASET_ID = CAD.DATASET_ID
          LEFT JOIN CETUS_USER CU_REGISTRANT ON CU_REGISTRANT.UID = CMR.REGISTRANT_UID
         WHERE CAD.WORKPLACE_UID = #{workplaceUid}
           AND CAD.DELETE_AT = 'N'
        <if test="@Ognl@isNotEmpty(showAt)">
           AND CDUI.SHOW_AT = #{showAt}
        </if>
        <if test="@Ognl@isNotEmpty(typeCd)">
           AND CDMU.TYPE_CD = #{typeCd}
        </if>
        <if test="@Ognl@isNotEmpty(browseText)">
           AND CDMU.CODE LIKE '%' || #{browseText} || '%'
        </if>
         ORDER BY CAD.APPROVED_DT DESC
        <if test="@Ognl@isNotEmpty(startNumber) and  @Ognl@isNotEmpty(endNumber)">
        OFFSET ${startNumber} LIMIT ${endNumber}
        </if>
    </select>

    <select id="getDatasetPageCount" parameterType="ApprovedDatasetSearch" resultType="int">
        /* cetusApprovedDataset.getDatasetPageCount */
        SELECT COUNT(*)
          FROM CETUS_APPROVED_DATASET CAD
          LEFT JOIN CETUS_DATASET_UI CDU ON CDU.APPROVED_DATASET_UID = CAD.UID
          LEFT JOIN CETUS_USER CU_APP ON CU_APP.UID = CAD.APPROVER_UID
          LEFT JOIN CETUS_DATASET_UI CDUI ON CDUI.APPROVED_DATASET_UID = CAD.UID
          LEFT JOIN CETUS_DATASET_MAIN_UI CDMU ON CDMU.UID = CDUI.MAIN_UI_UID
          LEFT JOIN CETUS_DATASET_CATEGORY CDC ON CDC.UID = CDUI.CATEGORY_UID
          LEFT JOIN CETUS_MOBIGEN_REGISTRANT CMR ON CMR.DATASET_ID = CAD.DATASET_ID
          LEFT JOIN CETUS_USER CU_REGISTRANT ON CU_REGISTRANT.UID = CMR.REGISTRANT_UID
         WHERE CAD.WORKPLACE_UID = #{workplaceUid}
           AND CAD.DELETE_AT = 'N'
        <if test="@Ognl@isNotEmpty(showAt)">
           AND CDUI.SHOW_AT = #{showAt}
        </if>
        <if test="@Ognl@isNotEmpty(typeCd)">
           AND CDMU.TYPE_CD = #{typeCd}
        </if>
        <if test="@Ognl@isNotEmpty(browseText)">
           AND CDMU.CODE LIKE '%' || #{browseText} || '%'
        </if>
    </select>

    <select id="getDatasetList" parameterType="ApprovedDatasetSearch" resultType="ApprovedDatasetList">
        /* cetusApprovedDataset.getDatasetList */
        SELECT CAD.UID AS APPROVED_UID
              ,CAD.DATASET_ID
              ,TO_CHAR(CAD.APPROVED_DT, 'YYYY-MM-DD HH:MM') AS APPROVED_DT
              ,CU_APP.USER_NM AS APPROVER_NM
              ,( SELECT COALESCE(ROUND(SUM(CDM.RATINGS) / COUNT(*)), 0)
                   FROM CETUS_DATASET_COMMENT CDM
                  WHERE CDM.APPROVED_DATASET_UID = CAD.UID ) AS RATINGS
              ,CASE
                WHEN EXISTS (
                        SELECT 1
                          FROM CETUS_DATASET_BOOKMARK B
                         WHERE B.APPROVED_DATASET_UID = CAD.UID
                ) THEN 'Y' ELSE 'N' END AS BOOKMARK_YN
              ,CDUI.CATEGORY_UID AS CATEGORY_UID
              ,CDC.CATEGORY_NM AS CATEGORY_NM
              ,CDUI.EXTRA_JSON AS EXTRA_JSON
              ,CF.FILE_ID AS THUMB_ID
              ,CASE WHEN CU_REGISTRANT.USER_ID IS NULL THEN 'FALSE' ELSE 'TRUE' END AS IS_REGISTERED
              ,CU_REGISTRANT.USER_ID AS REGISTRANT_ID
          FROM CETUS_APPROVED_DATASET CAD
          LEFT JOIN CETUS_DATASET_UI CDU ON CDU.APPROVED_DATASET_UID = CAD.UID
          LEFT JOIN CETUS_USER CU_APP ON CU_APP.UID = CAD.APPROVER_UID
          LEFT JOIN CETUS_DATASET_UI CDUI ON CDUI.APPROVED_DATASET_UID = CAD.UID
          LEFT JOIN CETUS_FILE CF ON CF.FILE_UID = CDUI.THUMB_UID AND CF.USE_AT = 'Y' AND CF.SAVED = 'Y'
          LEFT JOIN CETUS_DATASET_MAIN_UI CDMU ON CDMU.UID = CDUI.MAIN_UI_UID
          LEFT JOIN CETUS_DATASET_CATEGORY CDC ON CDC.UID = CDUI.CATEGORY_UID
          LEFT JOIN CETUS_MOBIGEN_REGISTRANT CMR ON CMR.DATASET_ID = CAD.DATASET_ID
          LEFT JOIN CETUS_USER CU_REGISTRANT ON CU_REGISTRANT.UID = CMR.REGISTRANT_UID
         WHERE CAD.WORKPLACE_UID = #{workplaceUid}
           AND CAD.DELETE_AT = 'N'
           AND CDU.SHOW_AT = 'Y'
        <if test="@Ognl@isNotEmpty(startDate) and @Ognl@isNotEmpty(endDate)">
           AND CAD.APPROVED_DT BETWEEN #{startDate}::TIMESTAMP
           AND (#{endDate}::DATE + INTERVAL '1 day' - INTERVAL '1 second')
        </if>
        <if test="@Ognl@isNotEmpty(categories)">
           AND CDUI.CATEGORY_UID IN
            <foreach collection="categories" item="categoryUid" open="(" separator="," close=")">
               #{categoryUid}
            </foreach>
        </if>
         ORDER BY CAD.APPROVED_DT DESC
    </select>

    <select id="getApprovedDatasetIdList" resultType="ApprovedDatasetIdList" parameterType="Long">
        /* cetusApprovedDataset.getApprovedDatasetIdList */
        SELECT CAD.DATASET_ID
          FROM CETUS_APPROVED_DATASET CAD
         WHERE WORKPLACE_UID = #{workplaceUid}
           AND DELETE_AT = 'N'
    </select>

    <insert id="insert" parameterType="CetusApprovedDataset" keyProperty="uid" useGeneratedKeys="true">
        /* cetusApprovedDataset.insert */
        INSERT INTO CETUS_APPROVED_DATASET (
             DATASET_ID
            ,WORKPLACE_UID
            ,APPROVED_DT
            ,APPROVER_UID
            ,DELETE_AT
        ) VALUES (
             #{datasetId}
            ,#{workplaceUid}
            ,NOW()
            ,#{approverUid}
            ,'N'
        )
    </insert>

    <select id="getApprovedDatasetView" parameterType="Long" resultType="ApprovedDatasetView">
        /* cetusApprovedDataset.getApprovedDatasetView */
        SELECT CAD.UID AS APPROVED_UID
              ,CAD.DATASET_ID
              ,CAD.WORKPLACE_UID
              ,CAD.APPROVED_DT
              ,CAD.APPROVER_UID
              ,CDU.CATEGORY_UID AS CATEGORY_UID
              ,CDC.CATEGORY_NM AS CATEGORY_NM
              ,CAD.CREATED_ID
              ,CF.FILE_ID AS THUMB_ID
              ,( SELECT COALESCE(ROUND(SUM(CDM.RATINGS) / COUNT(*)), 0)
                   FROM CETUS_DATASET_COMMENT CDM
                  WHERE CDM.APPROVED_DATASET_UID = CAD.UID
              ) AS RATINGS
              ,CASE
                   WHEN EXISTS (
                       SELECT 1
                         FROM CETUS_DATASET_BOOKMARK B
                        WHERE B.APPROVED_DATASET_UID = CAD.UID
                   ) THEN 'Y'
                   ELSE 'N'
                END AS BOOKMARK_YN
              ,CDU.EXTRA_JSON
              ,CAD.DELETE_AT
          FROM CETUS_APPROVED_DATASET CAD
          LEFT JOIN CETUS_DATASET_UI CDU ON CDU.APPROVED_DATASET_UID = CAD.UID
          LEFT JOIN CETUS_DATASET_CATEGORY CDC ON CDC.UID = CDU.CATEGORY_UID
          LEFT JOIN CETUS_FILE CF ON CF.FILE_UID = CDU.THUMB_UID AND CF.USE_AT = 'Y' AND CF.SAVED = 'Y'
         WHERE CAD.UID = #{uid}
    </select>

    <update id="deleteApprovedDataset" parameterType="Long">
        /* cetusApprovedDataset.deleteApprovedDataset */
        UPDATE CETUS_APPROVED_DATASET
           SET DELETE_AT = 'Y'
         WHERE UID = #{uid}
    </update>


    <select id="getHomeDatasetList" parameterType="HomeDatasetSearch" resultType="HomeDatasetList">
        /* cetusApprovedDataset.getHomeDatasetList */
        SELECT CAD.UID AS APPROVED_UID
              ,CAD.DATASET_ID AS DATASET_ID
              ,CDU.CATEGORY_UID AS CATEGORY_UID
              ,CDC.CATEGORY_NM AS CATEGORY_NM
              ,CDU.THUMB_UID AS THUMB_UID
              ,CF.FILE_ID AS THUMB_ID
              ,( SELECT COALESCE(ROUND(SUM(CDM.RATINGS) / COUNT(*)), 0)
                   FROM CETUS_DATASET_COMMENT CDM
                  WHERE CDM.APPROVED_DATASET_UID = CAD.UID
              ) AS RATINGS
              ,CASE
                   WHEN EXISTS (
                       SELECT 1
                         FROM CETUS_DATASET_BOOKMARK B
                        WHERE B.APPROVED_DATASET_UID = CAD.UID
              ) THEN 'Y'
                ELSE 'N'
                 END AS BOOKMARK_YN
             ,TO_CHAR(CAD.APPROVED_DT, 'YYYY-MM-DD HH:MM') AS APPROVED_DT
             ,CU.USER_NM AS APPROVER_NM
          FROM CETUS_APPROVED_DATASET CAD
          LEFT JOIN CETUS_USER CU ON CU.UID = CAD.APPROVER_UID
          LEFT JOIN CETUS_DATASET_UI CDU ON CAD.UID = CDU.APPROVED_DATASET_UID
          LEFT JOIN CETUS_DATASET_CATEGORY CDC ON CDC.UID = CDU.CATEGORY_UID
          LEFT JOIN CETUS_FILE CF ON CF.FILE_UID = CDU.THUMB_UID AND CF.USE_AT = 'Y'
         WHERE CAD.WORKPLACE_UID = #{workplaceUid}
           AND CDU.MAIN_UI_UID = #{mainUiUid}
        <if test="@Ognl@isNotEmpty(selectedCategory)">
           AND CDU.CATEGORY_UID = #{selectedCategory}
        </if>
           AND CAD.DELETE_AT = 'N'
           AND CDU.SHOW_AT = 'Y'
         ORDER BY CAD.APPROVED_DT DESC
         LIMIT #{limitCount}
    </select>

</mapper>