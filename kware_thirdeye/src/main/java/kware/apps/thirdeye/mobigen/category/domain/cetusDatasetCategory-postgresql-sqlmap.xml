<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cetusDatasetCategory">

    <select id="getDatasetCategoryList" parameterType="SearchCategory" resultType="CategoryList">
        /* cetusDatasetCategory.getDatasetCategoryList */
        SELECT MIN(CDC.UID) AS CATEGORY_UID
              ,CDC.CATEGORY_NM AS CATEGORY_NM
          FROM CETUS_DATASET_CATEGORY CDC
         WHERE CDC.WORKPLACE_UID = #{workplaceUid}
        <if test="@Ognl@isNotEmpty(categoryNm)">
           AND CDC.CATEGORY_NM LIKE '%' || #{categoryNm} || '%'
        </if>
         GROUP BY CDC.CATEGORY_NM
         ORDER BY CDC.CATEGORY_NM
    </select>

    <insert id="insert" parameterType="CetusDatasetCategory" useGeneratedKeys="true" keyProperty="uid">
        /* cetusDatasetCategory.insert */
        INSERT INTO CETUS_DATASET_CATEGORY (
             WORKPLACE_UID
            ,CATEGORY_NM
            ,REG_UID
            ,REG_DT
            ,UPDT_UID
            ,UPDT_DT
        ) VALUES (
             #{workplaceUid}
            ,#{categoryNm}
            ,#{regUid}
            ,NOW()
            ,#{updtUid}
            ,NOW()
        )
    </insert>

    <select id="getDatasetCategoryUsingList" parameterType="SearchUsingCategory" resultType="CategoryList">
        /* cetusDatasetCategory.getDatasetCategoryUsingList */
        SELECT CDC.UID AS CATEGORY_UID
              ,CDC.CATEGORY_NM AS CATEGORY_NM
          FROM CETUS_DATASET_CATEGORY CDC
         WHERE CDC.WORKPLACE_UID = #{workplaceUid}
           AND EXISTS (
             SELECT 1
               FROM CETUS_APPROVED_DATASET CAD
                LEFT JOIN CETUS_DATASET_UI CDU ON CDU.APPROVED_DATASET_UID = CAD.UID
               WHERE CDU.CATEGORY_UID = CDC.UID
                 AND CDU.MAIN_UI_UID = #{mainUiUid}
                 AND CAD.WORKPLACE_UID = #{workplaceUid}
                 AND CAD.DELETE_AT = 'N'
                 AND CDU.SHOW_AT = 'Y'
         )
         ORDER BY CDC.CATEGORY_NM DESC
         LIMIT #{limit}
    </select>

    <select id="getDatasetCategoryPage" parameterType="SearchPageCategory" resultType="CategoryListPage">
        /* cetusDatasetCategory.getDatasetCategoryPage */
        SELECT CDC.UID AS CATEGORY_UID
              ,CDC.CATEGORY_NM
              ,TO_CHAR(CDC.REG_DT, 'YYYY-MM-DD') AS REG_DT
              ,CDC.REG_UID
              ,CU.USER_NM AS REG_NM
              ,COUNT(CDU.CATEGORY_UID) AS USE_CNT
          FROM CETUS_DATASET_CATEGORY CDC
          LEFT JOIN CETUS_USER CU ON CU.UID = CDC.REG_UID
          LEFT JOIN CETUS_DATASET_UI CDU ON CDU.CATEGORY_UID = CDC.UID
          LEFT JOIN CETUS_APPROVED_DATASET CAD ON CAD.UID = CDU.APPROVED_DATASET_UID AND CAD.DELETE_AT = 'N'
         WHERE CDC.WORKPLACE_UID = #{workplaceUid}
        <if test="@Ognl@isNotEmpty(browseText)">
           AND (CU.USER_NM LIKE '%' || #{browseText} || '%' OR CDC.CATEGORY_NM LIKE '%' || #{browseText} || '%')
        </if>
        <if test="@Ognl@isNotEmpty(useAt)">
            <choose>
                <when test="useAt eq 'Y'.toString()">
                    -- 사용중인 (CDU 데이터가 1개 이상)
                    AND EXISTS (
                        SELECT 1
                          FROM CETUS_DATASET_UI CDU2
                         WHERE CDU2.CATEGORY_UID = CDC.UID
                    )
                </when>
                <when test="useAt eq 'N'.toString()">
                    -- 사용 안 하는 (CDU 데이터가 없는)
                    AND NOT EXISTS (
                        SELECT 1
                          FROM CETUS_DATASET_UI CDU3
                         WHERE CDU3.CATEGORY_UID = CDC.UID
                    )
                </when>
            </choose>
        </if>
          GROUP BY CDC.UID, CDC.CATEGORY_NM, CDC.REG_DT, CDC.REG_UID, CU.USER_NM
          ORDER BY CDC.UID DESC
        <if test="@Ognl@isNotEmpty(startNumber) and  @Ognl@isNotEmpty(endNumber)">
        OFFSET ${startNumber} LIMIT ${endNumber}
        </if>
    </select>

    <select id="getDatasetCategoryPageCount" parameterType="SearchPageCategory" resultType="int">
        /* cetusDatasetCategory.getDatasetCategoryPageCount */
        SELECT COUNT(DISTINCT CDC.UID) AS TOTAL_COUNT
          FROM CETUS_DATASET_CATEGORY CDC
          LEFT JOIN CETUS_USER CU ON CU.UID = CDC.REG_UID
          LEFT JOIN CETUS_DATASET_UI CDU ON CDU.CATEGORY_UID = CDC.UID
          LEFT JOIN CETUS_APPROVED_DATASET CAD ON CAD.UID = CDU.APPROVED_DATASET_UID AND CAD.DELETE_AT = 'N'
         WHERE CDC.WORKPLACE_UID = #{workplaceUid}
        <if test="@Ognl@isNotEmpty(browseText)">
           AND (CU.USER_NM LIKE '%' || #{browseText} || '%' OR CDC.CATEGORY_NM LIKE '%' || #{browseText} || '%')
        </if>
        <if test="@Ognl@isNotEmpty(useAt)">
            <choose>
                <when test="useAt eq 'Y'.toString()">
                    -- 사용중인 (CDU 데이터가 1개 이상)
                    AND EXISTS (
                        SELECT 1
                          FROM CETUS_DATASET_UI CDU2
                         WHERE CDU2.CATEGORY_UID = CDC.UID
                    )
                </when>
                <when test="useAt eq 'N'.toString()">
                    -- 사용 안 하는 (CDU 데이터가 없는)
                    AND NOT EXISTS (
                        SELECT 1
                          FROM CETUS_DATASET_UI CDU3
                         WHERE CDU3.CATEGORY_UID = CDC.UID
                    )
                </when>
            </choose>
        </if>
    </select>

    <delete id="delete" parameterType="Long">
        /* cetusDatasetCategory.delete */
        DELETE FROM CETUS_DATASET_CATEGORY
         WHERE UID = #{uid}
    </delete>

    <select id="getDatasetCategoryForClone" parameterType="CloneCategory" resultType="Long">
        /* cetusDatasetCategory.getDatasetCategoryForClone */
        SELECT CDU.UID
          FROM CETUS_DATASET_UI CDU
         INNER JOIN CETUS_DATASET_CATEGORY CDC ON CDC.UID = CDU.CATEGORY_UID
         WHERE CDC.UID IN
        <foreach collection="uids" item="uid" open="(" separator="," close=")">
            #{uid}
        </foreach>
    </select>
</mapper>